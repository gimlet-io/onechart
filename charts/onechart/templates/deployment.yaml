apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "robustName" .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "helm-chart.labels" . | nindent 4 }}
  annotations:
    kubectl.kubernetes.io/default-container: {{ template "robustName" .Release.Name }}
    {{- if .Values.gitSha }}
    gimlet.io/git-sha: {{ .Values.gitSha }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "helm-chart.selectorLabels" . | nindent 6 }}
  {{- $singleReplica := eq (.Values.replicas | int64) 1 }}
  {{- $strategyNotDefined := not .Values.strategy }}
  {{- if and (and .Values.volumes $singleReplica) $strategyNotDefined}}
  strategy:
    type: Recreate
  {{- end }}
  {{- if .Values.strategy }}
  strategy:
    type: {{ .Values.strategy }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.gitSha }}
        gimlet.io/git-sha: {{ .Values.gitSha }}
        {{- end }}
        {{- if .Values.gitRepository }}
        gimlet.io/git-repository: {{ .Values.gitRepository }}
        {{- end }}
      labels:
        {{- include "helm-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount }}
      {{- end }}
      initContainers:
        {{- range .Values.initContainers }}  
        - name:  {{ .name }}
          image: "{{ .image }}:{{ .tag }}"
          imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
          {{- include "common.envFromRef.tpl" $ | nindent 10 }}
          {{- if .command }}
          command:
            - {{ $.Values.shell }}
            - -c
            - {{ .command | quote}} 
          {{- end }}
          volumeMounts:
          {{- range $.Values.volumes }}  
          {{if (or (hasPrefix "shared-" .name) (hasPrefix "init-" .name))}}
          - mountPath: {{ .path }}
            name: {{ .name }}
          {{- end }}
          {{- end }}   
        {{- end }}      
      containers:
        - name: {{ template "robustName" .Release.Name }}
          securityContext: &securityContext
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            - {{ .Values.shell }}
            - -c
            - {{ .Values.command | quote }}
          {{- end }}
          {{- include "common.envFromRef.tpl" . | nindent 10 }}
          ports:
            {{- if not .Values.ports }}
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
            {{ else }}
            {{- range .Values.ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: TCP
            {{- end }}
            {{- end }}
          {{- if .Values.probe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.path }}
              port: {{ .Values.containerPort }}
              scheme: HTTP
            {{- with .Values.probe.settings }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.containerPort }}
              scheme: HTTP
            {{- with .Values.livenessProbe.settings }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- include "common.volumeMountsRef.tpl" . | nindent 10 }}
          {{- if not .Values.resources.ignore }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecar }}
        - name: {{ template "robustName" .Release.Name }}-sidecar
          securityContext: *securityContext
          image: {{ .Values.sidecar.repository }}:{{ .Values.sidecar.tag }}
          {{- if .Values.sidecar.command }}
          command:
            - {{ .Values.sidecar.shell }}
            - -c
            - {{ .Values.sidecar.command | quote }}
          {{- end }}
          {{- if or (or (.Values.vars) (.Values.secretEnabled)) .Values.sealedSecrets }}
          envFrom: *envFrom
          {{- end }}
          {{- if or (or (.Values.volumes) (.Values.sealedFileSecrets)) .Values.fileSecrets }}
          volumeMounts: *volumeMounts
          {{- end }}
        {{- end }}
      {{- include "common.volumesRef.tpl" . | nindent 6 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.spreadAcrossNodes .Values.affinity }}
      affinity:
        {{- if .Values.spreadAcrossNodes }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/instance"
                    operator: In
                    values:
                      - {{ template "robustName" .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
        {{- end }}
        {{- if .Values.affinity }}
        {{- toYaml .Values.affinity | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
