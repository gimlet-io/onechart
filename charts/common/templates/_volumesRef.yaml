{{- define "common.volumesRef.tpl" -}}
{{- if or (or (or (.Values.volumes) (.Values.sealedFileSecrets)) .Values.fileSecrets) .Values.existingFileSecrets }}
volumes:
  {{- range .Values.volumes }}

{{- $volumeName := .name -}}
{{- if .existingConfigMap }}
{{- $volumeName = .existingConfigMap -}}
{{- end }}
{{- if .fileName }}
{{- $volumeName = include "common.robustName" .fileName -}}
{{- end }}

  - name: {{ $volumeName }}
    {{- if .emptyDir }}
    emptyDir: {}
    {{- else if .existingConfigMap }}
    configMap:
      name: {{ .existingConfigMap }}
    {{- else if .fileName }}
    configMap:
      name: {{ $volumeName }}
    {{- else if .hostPath }}
    hostPath:
      path: {{ .hostPath.path }}
      {{- if .hostPath.type }}
      type: {{ .hostPath.type }}
      {{- end }}
    {{- else }}
    persistentVolumeClaim:
      {{- if .existingClaim }}
      claimName: {{ .existingClaim }}
      {{ else }}
      claimName: {{ printf "%s-%s" $.Release.Name .name }}
      {{- end }}
      {{- end }}
{{- end }}     
  {{- range .Values.sealedFileSecrets }}
  - name: {{ .name }}
    secret:
      secretName: {{ printf "%s-%s" $.Release.Name .name }}
  {{- end }}
  {{- range .Values.fileSecrets }}
  - name: {{ .name }}
    secret:
      secretName: {{ printf "%s-%s" $.Release.Name .name }}
  {{- end }}
  {{- range .Values.existingFileSecrets }}
  - name: {{ .name }}
    secret:
      secretName: {{ .name }}
  {{- end }}
{{- end }}
{{- end -}}
